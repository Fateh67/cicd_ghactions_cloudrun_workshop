name: CD
on:
  # this action will only run on each push to main, if you prefer continuous deployment
  # push:
  #   branches: ["main"]
  # this action will only run if you create a release, if you prefer continuous delivery
  release:
    types: [created]
  push:
    branches: ["step/5"]

jobs:
  build-publish-deploy:
    name: Build And Publish To GCP Artifact Registry + Deploy To Cloud Run
    runs-on: ubuntu-latest
    environment: live
    steps:
      - name: Checkout
        uses: actions/checkout@master

      # Build and publish the Docker image to the GCP Artifact Registry
      - name: Login to GAR
        uses: docker/login-action@v2
        with:
          registry: europe-west1-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.CLOUD_RUN_DEPLOYER_SA_KEY }}
      - id: docker-push-tagged
        name: Tag Docker image and push to Google Artifact Registry
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: |
            ${{ secrets.GCP_ARTIFACT_REPO }}/workshop:${{ github.sha }}

      # Setup gcloud CLI
      - id: "auth"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.CLOUD_RUN_DEPLOYER_SA_KEY }}"

      # not passing `--allow-unauthenticated` flag here because it is recommended to not let the CD pipeline take the responsibility of setting up authentication
      - id: "deploy"
        uses: "google-github-actions/deploy-cloudrun@v1"
        with:
          service: "workshop"
          image: "${{ secrets.GCP_ARTIFACT_REPO }}/workshop:${{ github.sha }}"
          env_vars: |
            NODE_ENV=production
          flags: "--port=8080"
          region: "europe-west1"

      - name: "deploy output"
        run: 'curl "${{ steps.deploy.outputs.url }}"'
